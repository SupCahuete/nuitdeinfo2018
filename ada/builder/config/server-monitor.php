<?php

return [

  /*
   * These are the checks that can be performed on your servers. You can add your own
   * checks. The only requirement is that they should extend the
   * `Spatie\ServerMonitor\Checks\CheckDefinitions\CheckDefinition` class.
   */
  'checks' => [
    // Perfomances supports
    'diskspace' => \Ada\Monitors\Diskspace::class,
    'ram' => \Ada\Monitors\Ram::class,

    // Databases
    'postgresql' => \Ada\Monitors\PostgreSQL::class,
    'mysql' => \Ada\Monitors\MySql::class,
    'redis' => \Ada\Monitors\Redis::class,

    // Server supports
    'nginx' => \Ada\Monitors\Nginx::class,
    'php-fpm' => \Ada\Monitors\PhpFPM::class,

    // Others
//    'memcached' => \Ada\Monitors\Memcached::class,
  ],

  /*
   * The performance of the package can be increased by allowing a high number
   * of concurrent ssh connections. Set this to a lower value if you're
   * getting weird errors running the check.
   */
  'concurrent_ssh_connections' => 5,

  /*
   * This string will be appended to the ssh command generated by the package.
   */
  'ssh_command_suffix' => '',

  /*
   * SSH port and user by defautl.
   */
  'ssh_user' => 'godfather',
  'ssh_port' => 22,

  'notifications' => [

    'notifications' => [
      Spatie\ServerMonitor\Notifications\Notifications\CheckSucceeded::class => [],
      Spatie\ServerMonitor\Notifications\Notifications\CheckRestored::class => ['slack'],
      Spatie\ServerMonitor\Notifications\Notifications\CheckWarning::class => ['slack'],
      Spatie\ServerMonitor\Notifications\Notifications\CheckFailed::class => ['slack'],
    ],

    /*
     * To avoid burying you in notifications, we'll only send one every given amount
     * of minutes when a check keeps emitting warning or keeps failing.
     */
    'throttle_failing_notifications_for_minutes' => 30,

    // Separate the email by , to add many recipients
    'mail' => [
      'to' => env('MAIL_ADMIN'),
    ],

    'slack' => [
      'webhook_url' => env('GODFATHER_WEB_HOOKS'),
    ],

    /*
     * Here you can specify the notifiable to which the notifications should be sent. The default
     * notifiable will use the variables specified in this config file.
     */
    'notifiable' => \Spatie\ServerMonitor\Notifications\Notifiable::class,

    /*
     * The date format used in notifications.
     */
    'date_format' => 'd/m/Y',
  ],

  /*
   * To add or modify behaviour to the `Host` model you can specify your
   * own model here. The only requirement is that they should
   * extend the `Host` model provided by this package.
   */
  'host_model' => Spatie\ServerMonitor\Models\Host::class,

  /*
   * To add or modify behaviour to the `Check` model you can specify your
   * own model here. The only requirement is that they should
   * extend the `Check` model provided by this package.
   */
  'check_model' => Spatie\ServerMonitor\Models\Check::class,

  /*
   * Right before running a check it's process will be given to this class. Here you
   * can perform some last minute manipulations on it before it will
   * actually be run.
   *
   * This class should implement Spatie\ServerMonitor\Manipulators\Manipulator
   */
  'process_manipulator' => Spatie\ServerMonitor\Manipulators\Passthrough::class,

  /*
   * Thresholds for disk space's alert.
   */
  'diskspace_percentage_threshold' => [
    'warning' => 50,
    'fail' => 90,
  ],

  /*
   * Thresholds for memory's alert.
   */
  'memory_percentage_threshold' => [
    'warning' => 70,
    'fail' => 90,
  ],
];
